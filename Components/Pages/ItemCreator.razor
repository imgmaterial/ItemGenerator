@page "/ItemCreator"
@using System.Diagnostics
@using TestBlazor.Services
<app>
    @rendermode InteractiveServer
</app>
<header>
    <h1>Item Generator</h1>
    <p>Easily create new item suggestions</p>
</header>
<div style="flex: 1; background-color: lightblue; padding: 10px;">
    <p>Item Name</p>
    <input @bind="_itemName" />
    <p><InputFile OnChange="OnFileSelected"/></p>
    @if (!string.IsNullOrEmpty(_imageUrl))
    {
    <img src="@_imageUrl" alt="Uploaded Image" style="max-width: 100%; max-height: 400px;"/>
    }
    <p>Item Description</p>
    <textarea rows="5" @bind="_itemDescription"></textarea>
    <p>Item Attributes</p>
    <button @onclick="()=>AddDropDown()">Add an extra item stat</button>
    @foreach (DropDownModel dropDown in dropDownMenus)
    {
        <p>
            <select @bind="dropDown.Attribute">
                @foreach (string attri in _itemManager.ItemAttributes)
                {
                    <option value="@attri">@attri</option>
                }
            </select>
            <input @bind="dropDown.AttributeValue"/>
        </p>
    }
</div>
@foreach (DropDownModel dropDown in dropDownMenus)
{
    <p>@dropDown.Attribute with value @dropDown.AttributeValue</p>
}

@code {

    ItemManager _itemManager = new ItemManager();

    List<DropDownModel> dropDownMenus = new List<DropDownModel>();
    
    private string _imageUrl = string.Empty;
    private string _itemName = string.Empty;
    private string _itemDescription = string.Empty;

    void AddDropDown()
    {
        dropDownMenus.Add(new DropDownModel());
    }

    public class DropDownModel
    {
        public string Attribute { get; set; } = string.Empty;
        public float AttributeValue { get; set; }
    }


    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File; 
        using var stream = new MemoryStream();
        await file.OpenReadStream().CopyToAsync(stream);
        _imageUrl = $"data:{file.ContentType};base64,{Convert.ToBase64String(stream.ToArray())}";
    }
}